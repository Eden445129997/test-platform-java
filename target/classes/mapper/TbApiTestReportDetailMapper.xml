<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.dao.TbApiTestReportDetailMapper">
  <resultMap id="BaseResultMap" type="com.platform.entity.TbApiTestReportDetail">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="case_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="report_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_mock" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="start_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="stop_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="time_taken" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="fail_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="api_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.platform.entity.TbApiTestReportDetailWithBLOBs">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="case_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="report_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_mock" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="start_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="stop_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="time_taken" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="fail_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="api_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="header" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="data" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="response" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="error_record" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, case_id, report_id, is_mock, sort, start_time, stop_time, time_taken, create_time, 
    update_time, fail_times, api_name, url
  </sql>
  <sql id="Blob_Column_List">
    header, data, response, error_record
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_api_test_report_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_api_test_report_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.platform.entity.TbApiTestReportDetailWithBLOBs">
    insert into tb_api_test_report_detail (id, case_id, report_id, 
      is_mock, sort, start_time, 
      stop_time, time_taken, create_time, 
      update_time, fail_times, api_name, 
      url, header, data, 
      response, error_record)
    values (#{id,jdbcType=INTEGER}, #{caseId,jdbcType=VARCHAR}, #{reportId,jdbcType=VARCHAR}, 
      #{isMock,jdbcType=BIT}, #{sort,jdbcType=INTEGER}, #{startTime,jdbcType=VARCHAR}, 
      #{stopTime,jdbcType=VARCHAR}, #{timeTaken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{failTimes,jdbcType=INTEGER}, #{apiName,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{header,jdbcType=LONGVARCHAR}, #{data,jdbcType=LONGVARCHAR}, 
      #{response,jdbcType=LONGVARCHAR}, #{errorRecord,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.entity.TbApiTestReportDetailWithBLOBs">
    insert into tb_api_test_report_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="caseId != null">
        case_id,
      </if>
      <if test="reportId != null">
        report_id,
      </if>
      <if test="isMock != null">
        is_mock,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="timeTaken != null">
        time_taken,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="failTimes != null">
        fail_times,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="header != null">
        header,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="errorRecord != null">
        error_record,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="reportId != null">
        #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="isMock != null">
        #{isMock,jdbcType=BIT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=VARCHAR},
      </if>
      <if test="timeTaken != null">
        #{timeTaken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failTimes != null">
        #{failTimes,jdbcType=INTEGER},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        #{header,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null">
        #{response,jdbcType=LONGVARCHAR},
      </if>
      <if test="errorRecord != null">
        #{errorRecord,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.entity.TbApiTestReportDetailWithBLOBs">
    update tb_api_test_report_detail
    <set>
      <if test="caseId != null">
        case_id = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="reportId != null">
        report_id = #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="isMock != null">
        is_mock = #{isMock,jdbcType=BIT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=VARCHAR},
      </if>
      <if test="timeTaken != null">
        time_taken = #{timeTaken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failTimes != null">
        fail_times = #{failTimes,jdbcType=INTEGER},
      </if>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="header != null">
        header = #{header,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=LONGVARCHAR},
      </if>
      <if test="errorRecord != null">
        error_record = #{errorRecord,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.platform.entity.TbApiTestReportDetailWithBLOBs">
    update tb_api_test_report_detail
    set case_id = #{caseId,jdbcType=VARCHAR},
      report_id = #{reportId,jdbcType=VARCHAR},
      is_mock = #{isMock,jdbcType=BIT},
      sort = #{sort,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=VARCHAR},
      stop_time = #{stopTime,jdbcType=VARCHAR},
      time_taken = #{timeTaken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      fail_times = #{failTimes,jdbcType=INTEGER},
      api_name = #{apiName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      header = #{header,jdbcType=LONGVARCHAR},
      data = #{data,jdbcType=LONGVARCHAR},
      response = #{response,jdbcType=LONGVARCHAR},
      error_record = #{errorRecord,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.entity.TbApiTestReportDetail">
    update tb_api_test_report_detail
    set case_id = #{caseId,jdbcType=VARCHAR},
      report_id = #{reportId,jdbcType=VARCHAR},
      is_mock = #{isMock,jdbcType=BIT},
      sort = #{sort,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=VARCHAR},
      stop_time = #{stopTime,jdbcType=VARCHAR},
      time_taken = #{timeTaken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      fail_times = #{failTimes,jdbcType=INTEGER},
      api_name = #{apiName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>